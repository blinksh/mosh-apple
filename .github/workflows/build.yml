name: CI

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    name: Building release assets
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: xcode-select
      run: sudo xcode-select -s /Applications/Xcode.app

    - name: install protobuf
      run: brew install protobuf@21

    - name: install automake
      run: brew install automake

    - name: install ncurses
      run: brew install ncurses

    - name: Delete release notes
      run: rm -f .build/release.md

    - name: Run build
      env:
        PKG_CONFIG_PATH: "/usr/local/opt/protobuf@21/lib/pkgconfig"
      run: swift run

    - name: Ls structure
      if: failure()
      run: ls -al /Users/runner/work/mosh-apple/mosh-apple/.build/artifacts/mosh-apple/Protobuf_C_.xcframework/ && ls -al /Users/runner/work/mosh-apple/mosh-apple/.build/artifacts/mosh-apple/Protobuf_C_.xcframework/tvos-arm64/Protobuf_C_.framework && ls -al /Users/runner/work/mosh-apple/mosh-apple/.build/artifacts/mosh-apple/Protobuf_C_.xcframework/tvos-arm64/Protobuf_C_.framework/Headers/google/protobuf

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: .build/release.md
        draft: false
        prerelease: false

    - name: Upload Release Asset Static
      id: upload-release-asset-static 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: .build/mosh.xcframework.zip
        asset_name: mosh.xcframework.zip
        asset_content_type: application/zip
